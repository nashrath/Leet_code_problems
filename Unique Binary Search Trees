Question number 96

Given an integer n, return the number of structurally unique BST's (binary search trees) which has exactly n nodes of unique values from 1 to n.

Example 1:


Input: n = 3
Output: 5
Example 2:

Input: n = 1
Output: 1

code:

class Solution:
    def solve(self, n, dp):
        if n <= 1:
            return 1
        if dp[n] != -1:
            return dp[n]
        ans = 0
        for i in range(1, n + 1):
            ans += self.solve(i - 1, dp) * self.solve(n - i, dp)
        dp[n] = ans
        return dp[n]

    def numTrees(self, n):
        dp = [-1] * (n + 1)
        return self.solve(n, dp)
